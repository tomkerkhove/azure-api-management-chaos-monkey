name: Ship to Production
on:
  push:
    paths:
    - '.github/workflows/push-image-to-ghcr.yml'
    - 'deploy/**'
    - 'src/**'
    branches:
    - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  IMAGE_TAG: latest

jobs:
  push:
    name: Push to GitHub Container Registry (GHCR)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: ghcr.io/tomkerkhove/api-management-chaos-monkey-api
    steps:
    - uses: actions/checkout@v2
    - name: Docker Login
      uses: docker/login-action@v1.8.0
      with:
        registry: ghcr.io
        username: tomkerkhove
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build the Docker image
      run: docker build ./src --file ./src/ChaosMonkey.API/Dockerfile --tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} --tag ${{ env.IMAGE_NAME }}:${{ github.sha }}
    - name: Push the Docker image (SHA ${{ github.sha }})
      run: docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}
    - name: Push the Docker image (Latest)
      run: docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deployment:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    needs: push
    environment: production
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION }}
        client-id: ${{ secrets.DEPLOY_AZURE_APP_ID }}

    - name: Deploy Chaos Monkey
      uses: azure/arm-deploy@v1
      with:
        deploymentName: chaos-monkey-release-${{ github.sha }}
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ vars.RESOURCE_GROUP }}
        template: ./deploy/azure-container-apps.bicep
        parameters: 'imageTag=${{ github.sha }}'
        failOnStdErr: true
